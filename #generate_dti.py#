import numpy as np

def usage():
    print "thetafile num_nodes num_scans"
    sys.exit(2)

def generate_dti(theta,num_nodes,num_scans):
    burnin=0
    sampint=0
    tempx=np.zeros((num_nodes,1))
    for s in range(1,num_scans):
        if s==1:
            sampleSkip= burnin+sampint
        else:
            sampleSkip=sampint
        for ctr in range(1,sampleSkip):
            for i in range(1,num_nodes):
                theta_true= np.dot(np.reshape(w[i,:,:],[num_nodes, behav_ft]),x.T)
                assert theta_true[i]==0
                eta=np.dot(theta_true.T,tempx)
                assert eta>=0
                tempx[i]=np.random.poisson(np.exp(eta))
        samples[s,:]=tempx
   
def main():
    if len(sys.argv)<2:
        usage()
    theta=np.load(sys.argv[1])
    num_nodes=int(sys.argv[2])
    num_scans=int(sys.argv[3])
        generate_dti(theta,num_nodes,num_scans)
if __name__ == '__main__':
    main()